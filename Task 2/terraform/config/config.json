{
  "network": [
    {
      "name": "tf-vpc",
      "vpc_cidr_block": "10.0.0.0/16",
      "subnets": [
        {
          "name": "public-subnet-a",
          "cidr_block": "10.0.1.0/24",
          "availability_zone": "eu-central-1a"
        },
        {
          "name": "public-subnet-b",
          "cidr_block": "10.0.2.0/24",
          "availability_zone": "eu-central-1b"
        }
      ]
    }
  ],

  "networks": [
    { "name": "public", "cidr": "0.0.0.0/0" },
    { "name": "internal", "cidr": "10.0.0.0/16" }
  ],

  "security_groups": [
    {
      "name": "test-sg",
      "vpc": "tf-vpc",
      "description": "test",
      "ingress": [
        { "protocol": "-1", "port": 0, "source": "public" },
        { "protocol": "-1", "port": 0, "source": "internal" }
      ],
      "egress": [
        { "protocol": "-1", "port": 0, "destination": "public" },
        { "protocol": "-1", "port": 0, "destination": "internal" }
      ]
    },
    {
      "name": "test-sg-2",
      "vpc": "tf-vpc",
      "description": "test",
      "ingress": [
        { "protocol": "-1", "port": 0, "source": "public" },
        { "protocol": "-1", "port": 0, "source": "internal" }
      ],
      "egress": [
        { "protocol": "-1", "port": 0, "destination": "public" },
        { "protocol": "-1", "port": 0, "destination": "internal" }
      ]
    }
  ],

  "vms": [
    {
      "name": "es-1",
      "ami": "ami-0af9b40b1a16fe700",
      "instance_type": "t3.medium",
      "subnet": "public-subnet-a",
      "security_groups": ["test-sg"],
      "user_data": "elasticsearch.sh",
      "target_group": "",
      "port": null
    },
    {
      "name": "es-2",
      "ami": "ami-0af9b40b1a16fe700",
      "instance_type": "t3.medium",
      "subnet": "public-subnet-a",
      "security_groups": ["test-sg"],
      "user_data": "elasticsearch.sh",
      "target_group": "",
      "port": null
    },
    {
      "name": "kibana",
      "ami": "ami-0af9b40b1a16fe700",
      "instance_type": "t3.small",
      "subnet": "public-subnet-a",
      "security_groups": ["test-sg"],
      "user_data": "elasticsearch.sh",
      "target_group": "tf-tg-task2",
      "port": 8080
    },
    {
      "name": "logstash/filebeat",
      "ami": "ami-0af9b40b1a16fe700",
      "instance_type": "t3.small",
      "subnet": "public-subnet-a",
      "security_groups": ["test-sg"],
      "user_data": "elasticsearch.sh",
      "target_group": "",
      "port": null
    }
  ],

    "load_balancer": [
    {
      "name": "tf-alb-task2",
      "internal": false,
      "load_balancer_type": "application",
      "vpc": "tf-vpc",
      "protocol": "HTTP",
      "port": 80,
      "target_type": "instance",
      "security_groups": ["test-sg"],
      "subnets": ["public-subnet-a", "public-subnet-b"]
    }
  ],

  "listener": [
    {
      "name": "tf-listener-ingress-http-task2",
      "protocol": "HTTP",
      "port": 80,
      "load_balancer": "tf-alb-task2",
      "default_action": {
        "type": "redirect",
        "redirect": {
          "protocol": "HTTPS",
          "port": 443,
          "status_code": "HTTP_301"
        }
      }
    },
    {
      "name": "tf-listener-ingress-https-task2",
      "protocol": "HTTPS",
      "port": 443,
      "ssl_policy": "ELBSecurityPolicy-2016-08",
      "load_balancer": "tf-alb-task2",
      "default_action": {
        "type": "forward",
        "target_group": "tf-tg-task2"
      }
    }
  ],

  "target_group": [
    {
      "name": "tf-tg-task2",
      "vpc": "tf-vpc",
      "protocol": "HTTP",
      "port": 8080,
      "target_type": "instance"
    }
  ],

    "elasticache": [
    {
      "name": "example-primary",
      "description": "2-node Redis cluster with master-replica",
      "engine": "redis",
      "engine_version": "6.x",
      "node_type": "cache.t3.medium",
      "num_cache_clusters": 2,
      "automatic_failover_enabled": true,
      "multi_az_enabled": true,
      "security_groups": ["test-sg"],
      "port": 6379,
      "apply_immediately": true,
      "parameter_group": {
        "name": "custom-redis-params",
        "family": "redis6.x",
        "description": "Custom Redis parameter group",
        "parameter": {
          "name": "maxmemory-policy",
          "value": "allkeys-lru"
        }
      },
      "subnet_group": {
        "name": "redis-subnet-group",
        "subnets": ["public-subnet-a", "public-subnet-b"]
      }
    }
  ]
}
