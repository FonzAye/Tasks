- name: "Configure /etc/kibana/kibana.yml"
  ansible.builtin.template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: kibana
    group: kibana
    mode: '0644'
    backup: yes
  register: kibana_config
  failed_when: kibana_config is failed
  changed_when: kibana_config.changed

- name: "Ensure /etc/kibana is owned by kibana user"
  ansible.builtin.file:
    path: /etc/kibana
    owner: kibana
    group: kibana
    recurse: yes
  register: chown_etc_kibana
  failed_when: chown_etc_kibana is failed
  changed_when: chown_etc_kibana.changed

- name: "Ensure /usr/share/kibana is owned by kibana user"
  ansible.builtin.file:
    path: /usr/share/kibana
    owner: kibana
    group: kibana
    recurse: yes
  register: chown_usr_share_kibana
  failed_when: chown_usr_share_kibana is failed
  changed_when: chown_usr_share_kibana.changed

- name: "Ensure /var/log/kibana is owned by kibana user"
  ansible.builtin.file:
    path: /var/log/kibana
    owner: kibana
    group: kibana
    recurse: yes
  register: chown_var_log_kibana
  failed_when: chown_var_log_kibana is failed
  changed_when: chown_var_log_kibana.changed

- name: "Enable and start Kibana service"
  ansible.builtin.systemd:
    name: kibana
    enabled: yes
    state: started
    daemon_reload: yes  # Ensures systemd picks up any changes (e.g. service unit updates)
    masked: no
  register: kibana_service
  failed_when: kibana_service is failed
  changed_when: kibana_service.changed
